<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<description>spring-mvc配置</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:enterprisesite.properties" />

	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="cn.enterprisesite" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven validator="validator" content-negotiation-manager="contentNegotiationManager" ignore-default-model-on-redirect="true">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list><value>application/json;charset=UTF-8</value></list>
				</property>
				<property name="prettyPrint" value="false"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes" >
			<map>
				<entry key="xml" value="application/xml"/>
				<entry key="json" value="application/json"/>
			</map>
		</property>
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="favorPathExtension" value="true"/>
	</bean>

	<!-- 视图解析器 -->
	<mvc:view-resolvers>
		<mvc:content-negotiation>
			<mvc:default-views>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
			</mvc:default-views>
		</mvc:content-negotiation>
		<mvc:jsp prefix="${web.view.prefix}" suffix="${web.view.suffix}"/>
	</mvc:view-resolvers>

	<!--注册验证器，可用@Valid进行对象验证-->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- 文件上传解析 最大上传文件大小为 10M=10*1024*1024(B)=10485760 bytes -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>


	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />

	<!-- 静态资源映射  -->
	<mvc:resources mapping="/static/**" location="/static/"/>

	<!-- 定义无Controller的path直接映射到主页 -->
	<mvc:view-controller path="/" view-name="${adminPath}/login"/>

	<!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
	<!--<mvc:interceptors>-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="${adminPath}/**" />-->
			<!--<mvc:exclude-mapping path="/static/**"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/validateCode"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/**/tree-data"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/login"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/mapper/log"/>-->
			<!--<bean class="cn.enterprisesite.support.interceptor.LogInterceptor" />-->
		<!--</mvc:interceptor>-->
	<!--</mvc:interceptors>-->


</beans>